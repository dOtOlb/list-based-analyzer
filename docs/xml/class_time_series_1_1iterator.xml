<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_time_series_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>TimeSeries::iterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::iterator&lt; std::input_iterator_tag, TimeSeries&lt; T &gt;::timeslot, int, TimeSeries&lt; T &gt;::timeslot *, TimeSeries&lt; T &gt;::timeslot &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_time_series_1_1iterator_1ad92e6909e31c23155f200626afe3bec0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TimeSeries&lt; T &gt;::iterator::slot</definition>
        <argsstring></argsstring>
        <name>slot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="148" column="1" bodyfile="src/TimeSeries.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_time_series_1_1iterator_1a4b05594f746778dd348386b8ccb27ea5" prot="private" static="no" mutable="no">
        <type><ref refid="class_time_series" kindref="compound">TimeSeries</ref>&lt; T &gt; *</type>
        <definition>TimeSeries&lt;T&gt;* TimeSeries&lt; T &gt;::iterator::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="149" column="1" bodyfile="src/TimeSeries.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_time_series_1_1iterator_1a67884c3163708f5898d86c08d66f4e47" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TimeSeries&lt; T &gt;::iterator::iterator</definition>
        <argsstring>(TimeSeries&lt; T &gt; *p, double _timepoint=0)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="class_time_series" kindref="compound">TimeSeries</ref>&lt; T &gt; *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_timepoint</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="151" column="1" bodyfile="src/TimeSeries.h" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_time_series_1_1iterator_1a823ab3a7ba9e70776a3865a3b9f39113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_time_series_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; TimeSeries&lt; T &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="156" column="1" bodyfile="src/TimeSeries.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_time_series_1_1iterator_1a1c47c88818865e05d37b7b5a42fc6c65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_time_series_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator TimeSeries&lt; T &gt;::iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="160" column="1" bodyfile="src/TimeSeries.h" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_time_series_1_1iterator_1a9691ae899619277a4c3aa88b64166efc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TimeSeries&lt; T &gt;::iterator::operator==</definition>
        <argsstring>(iterator other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_time_series_1_1iterator" kindref="compound">iterator</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="165" column="1" bodyfile="src/TimeSeries.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_time_series_1_1iterator_1a72462d4321fdb80297b8bd91b3896063" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TimeSeries&lt; T &gt;::iterator::operator!=</definition>
        <argsstring>(iterator other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_time_series_1_1iterator" kindref="compound">iterator</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="168" column="1" bodyfile="src/TimeSeries.h" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_time_series_1_1iterator_1a08ba756d2915e8427ed39cbf153e74e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator_traits&lt; <ref refid="class_time_series_1_1iterator" kindref="compound">iterator</ref> &gt;::reference</type>
        <definition>iterator_traits&lt;iterator&gt;::reference TimeSeries&lt; T &gt;::iterator::operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="171" column="1" bodyfile="src/TimeSeries.h" bodystart="171" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>std::iterator&lt; std::input_iterator_tag, TimeSeries&lt; T &gt;::timeslot, int, TimeSeries&lt; T &gt;::timeslot *, TimeSeries&lt; T &gt;::timeslot &gt;</label>
      </node>
      <node id="12">
        <label>TimeSeries&lt; T &gt;::iterator</label>
        <link refid="class_time_series_1_1iterator"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>std::iterator&lt; std::input_iterator_tag, TimeSeries&lt; T &gt;::timeslot, int, TimeSeries&lt; T &gt;::timeslot *, TimeSeries&lt; T &gt;::timeslot &gt;</label>
      </node>
      <node id="14">
        <label>TimeSeries&lt; T &gt;::iterator</label>
        <link refid="class_time_series_1_1iterator"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/TimeSeries.h" line="147" column="1" bodyfile="src/TimeSeries.h" bodystart="141" bodyend="190"/>
    <listofallmembers>
      <member refid="class_time_series_1_1iterator_1a67884c3163708f5898d86c08d66f4e47" prot="public" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>iterator</name></member>
      <member refid="class_time_series_1_1iterator_1a08ba756d2915e8427ed39cbf153e74e7" prot="public" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>operator *</name></member>
      <member refid="class_time_series_1_1iterator_1a72462d4321fdb80297b8bd91b3896063" prot="public" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>operator!=</name></member>
      <member refid="class_time_series_1_1iterator_1a823ab3a7ba9e70776a3865a3b9f39113" prot="public" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>operator++</name></member>
      <member refid="class_time_series_1_1iterator_1a1c47c88818865e05d37b7b5a42fc6c65" prot="public" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>operator++</name></member>
      <member refid="class_time_series_1_1iterator_1a9691ae899619277a4c3aa88b64166efc" prot="public" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>operator==</name></member>
      <member refid="class_time_series_1_1iterator_1a4b05594f746778dd348386b8ccb27ea5" prot="private" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>parent</name></member>
      <member refid="class_time_series_1_1iterator_1ad92e6909e31c23155f200626afe3bec0" prot="private" virt="non-virtual"><scope>TimeSeries::iterator</scope><name>slot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
